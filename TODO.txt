TODO ideas for cvnirc-qt by canvon
==================================

 * Have some output in the Main tab again (on a really high level); like
   creation/deletion of IRCProtoClient instances, contexts or the like.
   Perhaps also connection states without all the raw or partially-parsed
   lines in-between.
   (2017-11-20/-21)

 * Carry unique connection tag, so that the protocol buffer contents
   with two time the same/similar server connected will be meaningful.
   (2017-11-20/-21)

 * Have close tabs support. (Remove contexts? Have I refcounting for them?
   Skip Main tab (index 0).)
   (2017-11-23)

 * Further test/improve the multi-server support.
   (2017-11-20/-21)

 * Modify cvnirc-cli, too, to use the multi-server supporting machinery.
   (2017-11-20/-21)

 * Have/support shorter timestamps, but this will likely require
   some kind of timer that outputs "day changed" messages now and then. ...
   (2017-11-23)

 * Automatic reconnects on disconnect.
   (2017-11-20/-21)
 
 * Automatic alternate nick generation when our choice gets rejected
   at connect time.
   (2017-11-20/-21)

 * Collect MOTD lines and pass the full MOTD as a multi-line text object,
   perhaps to be displayed in its own window tab.
   (2017-11-20/-21)

 * Have client-side interpreted user commands. (Like, /window close,
   perhaps? Or a /quit that exits the application... (?))
   (2017-11-20/-21)

 * Save & restore settings, e.g., host/port/user/nick.
   (2017-11-20/-21)

 * SSL/TLS encryption. Both raw and on-demand?
   (2017-11-20/-21)

 * Implement logging?
   (2017-11-20/-21)

 * Implement scriptability, perhaps via dbus-connected script servers.
   (2017-11-20/-21)

 * Build and run on Mac? on Windows?
   (2017-11-23)

 * Have Continuous Integration builds for ~each commit?
   (2017-11-23)


cvnirc-gui:
-----------


cvnirc-cli:
-----------

 * Implement "chat support", that is, the ability to write a line of text
   and it being submitted automatically with some command to some target.
   Before, the cli is ~useless! ... Perhaps it can be done while integrating
   multi-server support...
   (2017-11-23)

 * Have a more helpful replacement for the missing readline7 function?
   Perhaps clear the line by outputting \r + spaces x (terminal width - 1)
   + \r?
   (2017-11-23)

 * Add custom completer to GNU readline UI.
   (2017-11-21/-22)

